<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7O
        TAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7O
        TAC+zkwAvs5MAL7OTAC+zkwAvs5MAOHc3P/h3Nz/4dzc/+Hc3P/h3Nz/4dzc/+Hc3P/h3Nz/4dzc/+Hc
        3P++zkwAvs5MAL7OTAC+zkwAvs5MAL7OTADh3Nz/4dzc/+Hc3P/h3Nz/4dzc/+Hc3P/h3Nz/pKKi/6Si
        ov/h3Nz/vs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwA4dzc/+Hc3P/h3Nz/4dzc/+Hc3P/h3Nz/4dzc/+Hc
        3P/h3Nz/4dzc/77OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAOHc3P8DAwP/AwMD/wMDA/8DAwP/AwMD/wMD
        A/8DAwP/AAAA/+Hc3P++zkwAvs5MAL7OTAC+zkwAvs5MAL7OTADOyMn/AwMD/wMDA/8DAwP/AwMD/wMD
        A/8DAwP/AwMD/wMDA//OyMn/vs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAzsjJ/wMDA/8DAwP/AwMD/wMD
        A/8DAwP/AwMD/wMDA/8DAwP/zsjJ/77OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAM7Iyf8DAwP//////wMD
        A/8DAwP/AwMD/wMDA/8DAwP/AwMD/87Iyf++zkwAvs5MAL7OTAC+zkwAvs5MAL7OTADOyMn/AwMD/wMD
        A///////AwMD////////////AwMD/wMDA//OyMn/vs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAzsjJ/wMD
        A///////AwMD/wMDA/8DAwP/AwMD/wMDA/8DAwP/zsjJ/77OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAM7I
        yf8DAwP/AwMD/wMDA/8DAwP/AwMD/wMDA/8DAwP/AwMD/87Iyf++zkwAvs5MAL7OTAC+zkwAvs5MAL7O
        TADOyMn/zsjJ/87Iyf/OyMn/zsjJ/87Iyf/OyMn/zsjJ/87Iyf/OyMn/vs5MAL7OTAC+zkwAvs5MAL7O
        TAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7O
        TAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7O
        TAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7OTAC+zkwAvs5MAL7O
        TAC+zkwA//8AAP//AADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAP//
        AAD//wAA//8AAA==
</value>
  </data>
</root>